{"version":3,"file":"auth-validator.cjs","sources":["../../../../../src/validators/auth-validator.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { zValidator } from \"@hono/zod-validator\";\n\n// Checks if the provided site ID matches any of the allowed domain patterns\nconst isDomainAllowed = (siteID: string, allowedDomains: string) => {\n\tconst patterns = allowedDomains.split(\",\").map((p) => p.trim());\n\n\treturn patterns.some((pattern) => {\n\t\t// Escape special regex characters to treat them as literals (e.g. '.' becomes '\\.')\n\t\tconst escapedPattern = pattern.replace(/[.+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n\n\t\t// Convert wildcard (*) to regex equivalent (.*) and anchor the pattern\n\t\t// This means *.example.com would match blog.example.com, store.example.com, etc\n\t\tconst regexPattern = `^${escapedPattern.replace(/\\*/g, \".*\")}$`;\n\n\t\t// Test if the site ID matches the current pattern\n\t\treturn new RegExp(regexPattern).test(siteID);\n\t});\n};\n\nconst authQuerySchema = z.object({\n\tprovider: z.enum([\"github\"], { message: \"The selected backend is not supported.\" }),\n\tsite_id: z.string(),\n\tscope: z.string(),\n});\n\n// Creates a validator middleware for authentication query parameters\nexport const authQueryValidator = (allowedDomains?: string) => {\n\treturn zValidator(\"query\", authQuerySchema, (result, c) => {\n\t\tif (!result.success) return c.text(result.error.issues[0].message, { status: 422 });\n\n\t\t// If allowedDomains is provided, perform domain access control checks\n\t\tconst siteID = result.data.site_id;\n\t\tif (allowedDomains && !isDomainAllowed(siteID, allowedDomains)) {\n\t\t\treturn c.text(\"Your domain is not authorized to use this authenticator.\", { status: 403 });\n\t\t}\n\t});\n};\n"],"names":["isDomainAllowed","siteID","allowedDomains","p","pattern","regexPattern","authQuerySchema","z","authQueryValidator","zValidator","result","c"],"mappings":"kTAIMA,EAAkB,CAACC,EAAgBC,IACvBA,EAAe,MAAM,GAAG,EAAE,IAAKC,GAAMA,EAAE,MAAM,EAE9C,KAAMC,GAAY,CAMjC,MAAMC,EAAe,IAJED,EAAQ,QAAQ,qBAAsB,MAAM,EAI3B,QAAQ,MAAO,IAAI,CAAC,IAG5D,OAAO,IAAI,OAAOC,CAAY,EAAE,KAAKJ,CAAM,CAAA,CAC3C,EAGIK,EAAkBC,UAAE,OAAO,CAChC,SAAUA,UAAE,KAAK,CAAC,QAAQ,EAAG,CAAE,QAAS,yCAA0C,EAClF,QAASA,UAAE,OAAO,EAClB,MAAOA,UAAE,OAAO,CACjB,CAAC,EAGYC,EAAsBN,GAC3BO,EAAW,WAAA,QAASH,EAAiB,CAACI,EAAQC,IAAM,CAC1D,GAAI,CAACD,EAAO,QAAS,OAAOC,EAAE,KAAKD,EAAO,MAAM,OAAO,CAAC,EAAE,QAAS,CAAE,OAAQ,IAAK,EAG5E,MAAAT,EAASS,EAAO,KAAK,QAC3B,GAAIR,GAAkB,CAACF,EAAgBC,EAAQC,CAAc,EAC5D,OAAOS,EAAE,KAAK,2DAA4D,CAAE,OAAQ,IAAK,CAC1F,CACA"}